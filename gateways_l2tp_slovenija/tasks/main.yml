- name: Install dependencies for this role
  apt:
    pkg: ['git', 'libnetfilter-conntrack-dev', 'libnfnetlink-dev', 'python-dev', 'python-virtualenv', 'gcc',
      'libnl-3-dev', 'libffi-dev', 'libevent-dev', 'libnetfilter-conntrack3', 'bridge-utils', 'ebtables', 'iproute2']
  when: domaenenliste is defined

- name: Get all enabled tunneldigger (domain specific) instances
  shell: |
    set -o pipefail
    /bin/ls /etc/systemd/system/multi-user.target.wants/tunneldigger@* | grep -oE "[0-9]+"
  args:
    executable: bash
  changed_when: False
  failed_when: False
  check_mode: no
  register: _td_domain_instances
  when: domaenenliste is defined

- name: Stop and disable obsolete td instances
  service: name="tunneldigger@{{ item }}.service" enabled=no state=stopped
  with_items: "{{ _td_domain_instances.stdout_lines }}"
  when: domaenenliste is defined and item not in domaenenliste

- name: Clone tunneldigger
  git:
    repo: https://github.com/wlanslovenija/tunneldigger
    dest: /srv/tunneldigger
    update: yes
#    version: 18f365f329795400f4d7a101a6d45bc859100144
  when: domaenenliste is defined
  tags:
    - skip_ansible_lint

- name: generate virtualenv.
  command:
    "virtualenv env_tunneldigger"
  args:
    chdir: /srv/tunneldigger/
    creates: "/srv/tunneldigger/env_tunneldigger/bin/python"
  when: domaenenliste is defined

- name: Install python dependencies
  command: "/srv/tunneldigger/env_tunneldigger/bin/python setup.py install"
  args:
    chdir: /srv/tunneldigger/broker
  when: domaenenliste is defined

- name: Deploy addif.sh for each domain
  template: src=addif.sh.j2 dest="/srv/tunneldigger/broker/scripts/addif_domain{{ item.key }}.sh" mode=0755
  with_dict: "{{ domaenenliste }}"
  when: domaenenliste is defined

- name: Deploy delif.sh for each domain
  template: src=delif.sh.j2 dest="/srv/tunneldigger/broker/scripts/delif_domain{{ item.key }}.sh" mode=0755
  with_dict: "{{ domaenenliste }}"
  when:
    - domaenenliste is defined

- name: Create sperrliste.txt if not exists
  command: touch /srv/tunneldigger/broker/scripts/sperrliste.txt
  args:
    creates: /srv/tunneldigger/broker/scripts/sperrliste.txt
  when: domaenenliste is defined

- name: Deploy tunneldigger.conf to /etc/modules-load.d/
  copy: src=tunneldigger.conf dest=/etc/modules-load.d/tunneldigger.conf
  notify: load kernel modules
  when: domaenenliste is defined

- name: Deploy l2tp_broker.cfg for each domain
  template: src="l2tp_broker.cfg.j2" dest="/srv/tunneldigger/broker/l2tp_broker_domain{{ item.key }}.cfg"
  notify: restart tunneldigger per domain
  with_dict: "{{ domaenenliste }}"
  when:
    - domaenenliste is defined

- name: Deploy tunneldigger@.service template file
  copy: src=tunneldigger@.service dest=/etc/systemd/system/tunneldigger@.service
  register: _domain_td_systemd
  notify:
    - restart tunneldigger per domain
  when:
    - domaenenliste is defined

- name: reload systemd
  systemd:
    daemon_reload: yes
  when:
    - domaenenliste is defined
    - _domain_td_systemd.changed

- name: enable all tunneldigger instances
  systemd: name="tunneldigger@{{ item.key }}.service" enabled=yes
  with_dict: "{{ domaenenliste }}"
  when:
    - domaenenliste is defined

- name: Logrotate Rotationszyklus und Anzahl anpassen
  template:
    src: logrotate-tunneldigger.j2
    dest: /etc/logrotate.d/tunneldigger
  when:
    - domaenenliste is defined
