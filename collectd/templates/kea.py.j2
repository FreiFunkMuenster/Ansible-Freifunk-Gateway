#!/usr/bin/python

import collectd,socket,json,collections,psycopg2

def performPSQL():
	conn = psycopg2.connect("host='127.0.0.1' dbname='kea_leases' user='kea' password='MGy8B5axgpXC5ih1FX1A'")
	cursor = conn.cursor()
	cursor.execute("SELECT subnet_id, COUNT(*) FROM lease4 WHERE state=0 GROUP BY subnet_id")
	return dict((int(x), int(y)) for x, y in cursor.fetchall())

def read():
	resDict = {}
	resDict[u'all_interfaces'] = collections.defaultdict(int)

	active_leases = performPSQL()

	for k, v in active_leases.items():
		if_name = 'bat' + str(k)
		resDict[if_name] = collections.defaultdict(int)
		resDict[if_name]['active-leases'] = v
		resDict[u'all_interfaces']['active-leases'] += v

	BUFF_SIZE = 1024
	s = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)
	s.connect("/var/kea/control.sock")
	s.send(b'{"command":"statistic-get-all","arguments":{}}')
	result = []
	part = s.recv(BUFF_SIZE)
	while len(part) == BUFF_SIZE:
		result.append(part)
		part = s.recv(1024)
	result.append(part)
	jsonData = json.loads(b''.join(result))
	for k,v in jsonData["arguments"].items():
		k = k.split('.') 
		interface = k[0].replace('subnet[','bat').replace(']','')
		if len(k) != 2:
			continue
		if interface not in resDict:
			resDict[interface] = collections.defaultdict(int)
		resDict[interface][k[1]] = v[0][0]
		resDict['all_interfaces'][k[1]] += v[0][0]

	s.close()

	for k,v in resDict.items():
		vl = collectd.Values(type='kea_leases')
		vl.plugin='kea_leases'
		vl.type_instance = k
		vl.dispatch(values=[v['total-addresses'], v['assigned-addresses'], v['declined-addresses'], v['declined-reclaimed-addresses'], v['reclaimed-leases'], v['active-leases']])

collectd.register_read(read)
