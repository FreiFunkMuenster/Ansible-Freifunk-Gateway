---
# Allgemeine Konfigurationen für alle Server

- name: Enable syntax highlighting in vim by default
  lineinfile:
    dest: ~/.vimrc
    regexp: '^syntax '
    line: 'syntax on'
    owner: root
    group: root
    mode: 0644
    create: yes

- name: Update .bash_profile file
  template:
    src: bash_profile.j2
    dest: ~/.bash_profile

- name: Flush all handlers
  meta: flush_handlers

- name: Eventuelles CDROM-Repo von der Installation entfernen
  lineinfile:
    dest: /etc/apt/sources.list
    state: absent
    regexp: 'cdrom'

- name: Prüfe ob ein Swapfile angelegt werden muss
  set_fact:
    swapfile_required: true
  when: swap_minimum_mbyte is defined and swap_minimum_mbyte > 0 and ansible_swaptotal_mb < swap_minimum_mbyte-1

- name: Prüfe ob /swap.img bereits benutzt wird
  lineinfile:
    dest: /proc/swaps
    regexp: "^/swap.img\\s"
    state: absent
  check_mode: yes
  changed_when: false
  register: swapfile_in_use
  when: swapfile_required is defined

- name: Deaktiviere Swap auf /swap.img
  command:
    cmd: "swapoff /swap.img"
  when: swapfile_required is defined and swapfile_in_use.found

- name: Ermittle erneut die aktuelle Größe des verfügbaren Swaps
  setup:
    filter: ansible_swaptotal_mb
  when: swapfile_required is defined and swapfile_in_use.found

- name: Lege Swapfile an
  command:
    cmd: "{{ item }}"
  args:
    warn: false
  with_items:
    - dd if=/dev/zero of=/swap.img bs=1M count={{ swap_minimum_mbyte - ansible_swaptotal_mb }}
    - chmod 600 /swap.img
    - mkswap /swap.img
    - swapon /swap.img
  when: swapfile_required is defined

- name: Trage Swapfile in /etc/fstab ein
  lineinfile:
    path: /etc/fstab
    line: "/swap.img none swap sw 0 0"
  when: swapfile_required is defined

- name: install common packages
  apt:
    name: ['vim', 'wget', 'vnstat', 'tmux', 'pastebinit', 'htop', 'jnettop', 'iotop', 'tcpdump', 'screen', 'strace', 'socat', 'dnsutils', 'host', 'ifupdown',
      'apt-transport-https', 'tshark', 'dwdiff', 'molly-guard', 'git', 'iperf3', 'mtr-tiny', 'dhcpdump', 'dhcping', 'irqbalance', 'build-essential', 'ethtool']
    update_cache: yes

- name: uninstall unneeded packages
  apt:
    pkg: ['rpcbind']
    update_cache: yes
    state: absent

- name: SSH-Schlüsseldatei generieren
  template:
    src: authorized_keys.j2
    dest: /root/.ssh/authorized_keys
  when: administratorenteam is defined

- name: SSH-Dämon Passwortanmeldung abschalten
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "^[#]?PasswordAuthentication"
    line: "PasswordAuthentication no"
  notify: reload sshd

- name: Unterstützung für deutsche Sprache aktivieren
  locale_gen: name=de_DE.UTF-8 state=present

- name: "Get all files in /etc/logrotate.d/"
  raw: find /etc/logrotate.d/ -type f
  register: logrotate_files
  check_mode: no
  changed_when: False

- name: "Update logrotate cycle in /etc/logrotate.d/"
  replace:
    dest: "{{ item }}"
    regexp: 'daily|weekly|monthly'
    replace: '{{ logrotate.cycle }}'
  with_items: "{{ logrotate_files.stdout_lines }}"

- name: "Update logrotate count in /etc/logrotate.d/"
  replace:
    dest: "{{ item }}"
    regexp: 'rotate[ \t]+[0-9]+'
    replace: 'rotate {{ logrotate.count }}'
  with_items: "{{ logrotate_files.stdout_lines }}"

- name: Logrotate Rotationszyklus und Anzahl anpassen
  template:
    src: logrotate.conf.j2
    dest: /etc/logrotate.conf
  when: logrotate is defined

- name: Logrotate konfigurieren für btmp
  template:
    src: logrotate-btmp.j2
    dest: /etc/logrotate.d/btmp
  when: logrotate is defined

- name: Logrotate konfigurieren für wtmp
  template:
    src: logrotate-wtmp.j2
    dest: /etc/logrotate.d/wtmp
  when: logrotate is defined

- name: Prüfe ob journald benutzt wird
  stat:
    path: /etc/systemd/journald.conf
  register: journald_conf

- name: journald-Logging zeitlich beschränken
  lineinfile:
    dest: /etc/systemd/journald.conf
    regexp: "^[#]?MaxRetentionSec"
    line: "MaxRetentionSec={{ logrotate.cycle | lower | replace('daily',1) | replace('weekly',7) | replace('monthly',30) | replace('yearly',365) | int * logrotate.count | int }}day"
  when: journald_conf.stat.exists
  notify: restart journald

- name: vnstat Bandbreiten limit auf 1000 Mbit erhöhen.
  lineinfile:
    dest: /etc/vnstat.conf
    regexp: "^MaxBandwidth"
    line: "MaxBandwidth 1000"
    state: present
