#!/bin/sh

# {{ ansible_managed }}

REPOSITORY=ssh://{{ item.backup_server_user }}@{{ item.backup_server }}:{{ item.backup_server_port }}/./{{ item.backup_server_path | default(ansible_hostname + "-bkp") }}
export BORG_PASSPHRASE=$(cat /root/backup-{{ item.name }}.repokey)
export BORG_RSH='ssh -i /root/.ssh/id_rsa_borg'

echo "------------------------------------------------------------------START------------------------------------------------------------------"
echo "Date: $(date) Backup: $(hostname) to $REPOSITORY"
echo "-----------------------------------------------------------------------------------------------------------------------------------------"

{% if item.prebackupcommands is defined %}
{% for prebackupcommand in item.prebackupcommands %}
{{prebackupcommand}}
{% endfor %}
{% endif %}

{% if item.mysqldatabases is defined %}
mkdir -p /root/mysqlbackup/
{% for db in item.mysqldatabases %}
echo "Dumping {{db}} mysql DB"
mysqldump --defaults-file=/etc/mysql/debian.cnf {% if item.mysqlparameters is defined %}{% for parameter in item.mysqlparameters %}{{parameter}}{% if not loop.last %} {% endif %}{% endfor %}{% endif %} -v {{db}} > /root/mysqlbackup/backup-{{db}}-db-{{ item.name }}.sql
{% endfor %}
{% endif %}

{% if item.pgsqldatabases is defined %}
mkdir -p /root/pgsqlbackup/
{% for db in item.pgsqldatabases %}
echo "Dumping {{db}} pgsql DB"
/usr/bin/sudo -u postgres /usr/bin/pg_dump {{db}} > /root/pgsqlbackup/backup-{{db}}-db-{{ item.name }}.pgsql
{% endfor %}
{% endif %}
{% if item.pgsqldumpall is defined and item.pgsqldumpall %}

mkdir -p /root/pgsqlbackup/
echo "Dumping all pgsql DBs"
/usr/bin/sudo -u postgres /usr/bin/pg_dumpall > /root/pgsqlbackup/dumpall_backup-{{ item.name }}.pgsql
{% endif %}

echo "Borg create"
borg create {{ item.borg_options }} \
        $REPOSITORY::'{hostname}-{now:%Y-%m-%d-%H-%M-%S}'\
        {{ item.directories | join(' ') }}{% if item.mysqldatabases is defined or item.pgsqldatabases is defined or (item.pgsqldumpall is defined and item.pgsqldumpall) %} \{% endif %}
{% if item.mysqldatabases is defined %}
{% for db in item.mysqldatabases %}

        /root/mysqlbackup/backup-{{db}}-db-{{ item.name }}.sql {% if not loop.last or item.pgsqldatabases is defined %} \{% endif %}
{% endfor %}
{% endif %}
{% if item.pgsqldatabases is defined %}
{% for db in item.pgsqldatabases %}

        /root/pgsqlbackup/backup-{{db}}-db-{{ item.name }}.pgsql {% if not loop.last or (item.pgsqldumpall is defined and item.pgsqldumpall) %}\{% endif %}
{% endfor %}
{% endif %}
{% if item.pgsqldumpall is defined and item.pgsqldumpall %}

        /root/pgsqlbackup/dumpall_backup-{{ item.name }}.pgsql
{% endif %}

{% if item.postbackupcommands is defined %}
{% for postbackupcommand in item.postbackupcommands %}
{{postbackupcommand}}
{% endfor %}
{% endif %}
{% if item.borg_prune is defined %}

BORGRESULT=$?
echo "Borg prune"
if [ $BORGRESULT -eq 0 ] ; then
borg prune -v --list $REPOSITORY --prefix '{hostname}-' {{ item.borg_prune }}
fi
{% endif %}
echo "------------------------------------------------------------------STOP-------------------------------------------------------------------"
echo "Date: $(date) Backup: $(hostname) to $REPOSITORY"
echo "-----------------------------------------------------------------------------------------------------------------------------------------"
exit 0

