### Ansible Prerequisites
- name: install python3-pymysql, python3-passlib (required by Ansible)
  apt:
    pkg: [ 'python3-pymysql', 'python3-passlib' ]

### Icinga2
- name: install Icinga2
  apt:
    pkg: [ 'icingacli', 'icinga2', 'monitoring-plugins-basic', 'nagios-nrpe-plugin' ]
    state: present

### Command-Module: Icinga2
- name: enable icinga2 ido feature
  file:
    src: '../features-available/command.conf'
    dest: '/etc/icinga2/features-enabled/command.conf'
    state: link
  notify: restart icinga2

### IDO-Module: Icinga2
- name: install MariaDB and Icinga2 IDO modules
  apt:
    pkg: [ 'mariadb-server', 'icinga2-ido-mysql' ]
    state: present

- name: get icinga2/ido-mysql.conf state
  stat:
    path: '/etc/icinga2/features-available/ido-mysql.conf'
  register: icinga2_ido_db_conf

- name: configure icinga2 ido feature with random mysql password
  template:
    src: 'icinga2/ido-mysql.conf.j2'
    dest: '/etc/icinga2/features-available/ido-mysql.conf'
    owner: 'nagios'
    group: 'nagios'
    mode: '0600'
  when: icinga2_ido_db_conf.stat.exists == False
  notify: restart icinga2

- name: read ido-mysql.conf
  slurp:
    src: '/etc/icinga2/features-available/ido-mysql.conf'
  register: icinga2_ido_db_conf_file

- name: extract icinga2 ido database password from ido-mysql.conf
  set_fact:
    icinga2_ido_db_pw: "{{ icinga2_ido_db_conf_file['content'] | b64decode | regex_findall('password = \"(.+)\"') | first }}"

- name: enable icinga2 ido feature
  file:
    src: '../features-available/ido-mysql.conf'
    dest: '/etc/icinga2/features-enabled/ido-mysql.conf'
    state: link
  notify: restart icinga2

- name: create IDO database
  mysql_db:
    login_unix_socket: '/run/mysqld/mysqld.sock'
    name: 'icinga2_ido'
  register: icinga2_ido_db

- name: create IDO database user
  mysql_user:
    login_unix_socket: '/run/mysqld/mysqld.sock'
    name: 'icinga2_ido'
    password: '{{ icinga2_ido_db_pw }}'
    host: localhost
    priv: 'icinga2_ido.*:ALL'

- name: import IDO database schema
  mysql_db:
    login_unix_socket: '/run/mysqld/mysqld.sock'
    name: 'icinga2_ido'
    state: import
    target: '/usr/share/icinga2-ido-mysql/schema/mysql.sql'
  when: icinga2_ido_db.changed == true
  notify: restart icinga2

### Icinga Web2
- name: install Icinga Web 2
  apt:
    pkg: [ 'icingaweb2', 'apache2' ]
    state: present

# IDO: Icinga Web2
- name: set IDO database in icinga2 web
  template:
    src: 'icingaweb2/resources.ini.j2'
    dest: '/etc/icingaweb2/resources.ini'
    owner: 'www-data'
    group: 'icingaweb2'
    mode: '0640'

### Icingaweb2 DB (Auth)
#- name: create Icinga2 web database
#  mysql_db:
#    login_unix_socket: /run/mysqld/mysqld.sock
#    name: icinga2_web
#  register: icingaweb2_db
#
#- name: create Icingaweb2 database user
#  mysql_user:
#    login_unix_socket: /run/mysqld/mysqld.sock
#    name: icinga2_web
#    password: '{{ lookup('password', '/tmp/mysqlpwd-icinga2_web.ansible length=16') }}'
#    host: localhost
#    priv: 'icinga2_web.*:ALL'
#
#- name: import Icingaweb2 database schema
#  mysql_db:
#    login_unix_socket: /run/mysqld/mysqld.sock
#    name: icinga2_web
#    state: import
#    target: /usr/share/icingaweb2/etc/schema/mysql.schema.sql
#  when: icingaweb2_db.changed == true
#
#- name: configure IcingaWeb2 for database # BLOCKINFILE!
#  template:
#    src: icingaweb2/resource.ini.j2
#    dest: /etc/icingaweb2/resources.ini
#    owner: www-data
#    group: icingaweb2
#    mode: 0660

### monitoring module
- name: install Icinga Web 2 monitoring module
  apt:
    pkg: [ 'icingaweb2-module-monitoring' ]
    state: present

- name: create enabledModules directory
  file:
    path: '/etc/icingaweb2/enabledModules'
    state: directory
    owner: 'www-data'
    group: 'icingaweb2'
    mode: '2750'

- name: enable Icingaweb2 monitoring module
  file:
    src: '/usr/share/icingaweb2/modules/monitoring'
    dest: '/etc/icingaweb2/enabledModules/monitoring'
    state: link

- name: copy Icingaweb2 monitoring module config
  copy:
    src: 'icingaweb2/modules/monitoring/'
    dest: '/etc/icingaweb2/modules/monitoring'
    owner: 'www-data'
    group: 'icingaweb2'
    mode: '0660'
    directory_mode: '2770'

- name: configure basic authentication in apache
  copy:
    src: 'apache2-icingaweb2-local.conf'
    dest: '/etc/apache2/conf-enabled/icingaweb2-local.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: reload apache2

- name: create htpasswd file
  htpasswd:
    path: '/etc/icingaweb2/.http-users'
    name: '{{ item.key }}'
    password: '{{ item.value }}'
    owner: 'root'
    group: 'www-data'
    mode: '0640'
  with_dict: '{{ icingaweb2_users }}'

- name: enable apache authentication provider
  copy:
    src: 'icingaweb2/authentication.ini'
    dest: '/etc/icingaweb2/authentication.ini'
    owner: 'www-data'
    group: 'icingaweb2'
    mode: '0640'

- name: configure logging
  copy:
    src: 'icingaweb2/config.ini'
    dest: '/etc/icingaweb2/config.ini'
    owner: 'www-data'
    group: 'icingaweb2'
    mode: '0640'

- name: configure user roles
  copy:
    src: 'icingaweb2/roles.ini'
    dest: '/etc/icingaweb2/roles.ini'
    owner: 'www-data'
    group: 'icingaweb2'
    mode: '0640'

# Mail forwarder
- name: install exim4-daemon-light
  apt:
    pkg: [ 'exim4-daemon-light' ]
    state: present

- name: "Configure exim4"
  template:
    src: 'exim4/update-exim4.conf.conf.j2'
    dest: '/etc/exim4/update-exim4.conf.conf'
  notify: update-exim4.conf

- name: "Configure remote smtp authentication"
  template:
    src: 'exim4/passwd.client.j2'
    dest: '/etc/exim4/passwd.client'
    mode: '0640'
    group: 'Debian-exim'
  notify: reload exim4

- name: "Configure sender email address"
  template:
    src: 'exim4/email-addresses.j2'
    dest: '/etc/email-addresses'
  notify: reload exim4

- name: "Enable sender email address as catchall"
  replace:
    path: "/etc/exim4/exim4.conf.template"
    regexp: '^(.*\${lookup{\${local_part}})lsearch({/etc/email-addresses}.*)$'
    replace: '\1wildlsearch\2'
  notify: reload exim4

- name: "Update logrotate cycle in /etc/logrotate.d/"
  replace:
    dest: "{{item}}"
    regexp: 'daily|weekly|monthly'
    replace: '{{logrotate.cycle}}'
  with_items:
    - /etc/logrotate.d/exim4-base
    - /etc/logrotate.d/exim4-paniclog

- name: "Update logrotate count in /etc/logrotate.d/"
  replace:
    dest: "{{item}}"
    regexp: 'rotate[ \t]+[0-9]+'
    replace: 'rotate {{logrotate.count}}'
  with_items:
    - /etc/logrotate.d/exim4-base
    - /etc/logrotate.d/exim4-paniclog
